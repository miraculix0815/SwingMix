/**
 *  Copyright 2009-2015 Jan Schlößin
 * 
 *  This file is part of SwingMix.
 *
 *  SwingMix is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  SwingMix is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with SwingMix.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  Diese Datei ist Teil von SwingMix.
 *
 *  SwingMix ist Freie Software: Sie können es unter den Bedingungen
 *  der GNU Lesser General Public License, wie von der Free Software Foundation,
 *  Version 3 der Lizenz oder (nach Ihrer Wahl) jeder späteren
 *  veröffentlichten Version, weiterverbreiten und/oder modifizieren.
 *
 *  SwingMix wird in der Hoffnung, dass es nützlich sein wird, aber
 *  OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
 *  Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
 *  Siehe die GNU Lesser General Public License für weitere Details.
 *
 *  Sie sollten eine Kopie der GNU Lesser General Public License zusammen mit diesem
 *  Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
 */

package swingmix.directories;

import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.tree.*;

/**
 * Created on 09.09.2009, 11:25:53
 * @author jan
 */
public class DirectoriesTreePanel
        extends javax.swing.JPanel
        implements TreeSelectionListener,
                   TreeExpansionListener {

  public static interface DirectoryChangedListener {
    void changed(Object source, File newDirectory);
  }

  private Set<DirectoryChangedListener> listeners = new HashSet<DirectoryChangedListener>();
  private DirectoriesTreeModel treeModel;

  /** Creates new form DirectoriesTreePanel */
  public DirectoriesTreePanel() {
    initComponents();
    jTree1.addTreeExpansionListener(this);
    jTree1.addTreeSelectionListener(this);
    jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

    DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
    renderer.setLeafIcon(renderer.getDefaultClosedIcon());
    jTree1.setCellRenderer(renderer);
}

  private DirectoriesTreeModel getTreeModel() {
    if (treeModel == null) {
      treeModel = new DirectoriesTreeModel();
    }
    return treeModel;
  }

  private FileNode treeNodeFrom(TreePath path) {
    return (FileNode) path.getLastPathComponent();
  }

  @Override
  public void treeExpanded(TreeExpansionEvent event) {
    expandInSeparateThreadButUpdateInEventDispatchingThread(treeNodeFrom(event.getPath()));
  }

  @Override
  public void treeCollapsed(TreeExpansionEvent event) {
  }

  private void expandInSeparateThreadButUpdateInEventDispatchingThread(final FileNode fileNode) {
    new Thread(new Runnable() {
      @Override
      public void run() {
        if (fileNode.expand()) {
          updateInEventDispatchingThread(fileNode);
        }
      }

      private void updateInEventDispatchingThread(final FileNode fileNode) {
        SwingUtilities.invokeLater(new Runnable() {
          @Override
          public void run() {
            getTreeModel().reload(fileNode);
          }
        });
      }
    }).start();
  }

  @Override
  public void valueChanged(TreeSelectionEvent event) {
    final FileNode fn = treeNodeFrom(event.getPath());
    if (fn != null) {
      fireDirectoryChanged(fn.getFile());
      jTextField1.setText(fn.getFile().
              getAbsolutePath());
    } else {
      jTextField1.setText("");
    }
  }

  public boolean addListener(DirectoryChangedListener listener) {
    return listeners.add(listener);
  }

  public boolean removeListener(DirectoryChangedListener listener) {
    return listeners.remove(listener);
  }

  private void fireDirectoryChanged(File selectedDir) {
    for (DirectoryChangedListener l : listeners)
      l.changed(this, selectedDir);
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jTree1 = new javax.swing.JTree();
    jTextField1 = new javax.swing.JTextField();

    jTree1.setModel(getTreeModel());
    jTree1.setRootVisible(false);
    jScrollPane1.setViewportView(jTree1);

    jTextField1.setEditable(false);
    jTextField1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTextField jTextField1;
  private javax.swing.JTree jTree1;
  // End of variables declaration//GEN-END:variables

}
